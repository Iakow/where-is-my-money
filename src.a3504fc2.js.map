{"version":3,"sources":["data/dataStore.js","data/rest.js","framework/element.js","components/Main.js","utils.js","components/List.js","components/Filters.js","components/TransactionForm.js","components/App.js","framework/render.js","index.js"],"names":["dataStore","auth","TOKEN","UID","userData","categories","balance","transactions","filteredTransactions","sortBySum","sortByDate","filterMoneyway","filterDate","firstDate","lastDate","Date","now","userDataIsLoaded","transactionForm","isOpened","transactionId","data","setUserData","selectTransactions","undefined","Object","entries","map","key","value","id","filter","item","date","sum","sort","a","b","window","connectFirebase","handleData","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","onAuthStateChanged","user","uid","getIdToken","then","token","getUserDB","catch","initializeUserDB","userDB","response","fetch","method","body","JSON","stringify","outcome","income","json","signout","signOut","signin","email","signInWithEmailAndPassword","userCredential","error","code","message","register","mail","createUserWithEmailAndPassword","getTransactions","result","addNewTransaction","transaction","setBalance","getBalance","getCategories","removeTransaction","editTransaction","createElement","tag","props","children","element","DocumentFragment","document","forEach","name","startsWith","toLowerCase","addEventListener","substr","includes","removeAttribute","setAttribute","e","console","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","Main","styles","main","openTransactionForm","category","comment","forms","focus","getHTMLDate","timestamp","d","DD","getDate","MM","getMonth","getFullYear","getHours","getMinutes","getDateString","List","totalSum","ListItems","categoryGroup","loadTransactionInForm","deleteTransaction","list","transactionID","target","parentElement","find","newBalance","Filters","SortBySum","SortByDate","handler","DateInput","setDateFilter","getTime","start","end","moneyWay","TransactionForm","Math","abs","form","addTransactionInDB","cancel","Sum","Category","querySelector","innerHTML","i","join","Comment","preventDefault","elements","newTransaction","initialFormSum","App","showForm","renderApp","app"],"mappings":"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","file":"src.a3504fc2.js","sourceRoot":"../src","sourcesContent":["const dataStore = {\n  auth: {\n    TOKEN: null,\n    UID: null,\n  },\n  userData: {\n    categories: null,\n    balance: null,\n    transactions: null,\n  },\n  filteredTransactions: null,\n  sortBySum: 0,\n  sortByDate: 0,\n  filterMoneyway: 0,\n  filterDate: {\n    firstDate: 0, // найти бы сразу минимальную дату\n    lastDate: Date.now(),\n  },\n  userDataIsLoaded: false,\n  transactionForm: {\n    isOpened: false,\n    transactionId: null,\n    data: null,\n  },\n  setUserData: setUserData,\n  selectTransactions: selectTransactions,\n};\n\nfunction setUserData({ balance, transactions, categories }) {\n  if (balance !== undefined) this.userData.balance = balance;\n  if (categories !== undefined) this.userData.categories = categories;\n  if (transactions !== undefined) {\n    this.userData.transactions = Object.entries(transactions).map(([key, value]) => ({\n      id: key,\n      ...value,\n    }));\n\n    this.selectTransactions();\n  }\n}\n\nfunction selectTransactions() {\n  this.filteredTransactions = [...this.userData.transactions];\n\n  this.filteredTransactions = this.filteredTransactions.filter(\n    item =>\n      item.date >= dataStore.filterDate.firstDate && item.date <= dataStore.filterDate.lastDate,\n  );\n\n  if (this.filterMoneyway != 0) {\n    this.filteredTransactions = this.filteredTransactions.filter(\n      item => this.filterMoneyway * item.sum < 0,\n    );\n  }\n\n  if (this.sortByDate != 0) {\n    this.filteredTransactions.sort((a, b) => this.sortByDate * (b.date - a.date));\n  }\n  if (this.sortBySum != 0) {\n    this.filteredTransactions.sort((a, b) => this.sortBySum * (a.sum - b.sum));\n  }\n}\n\nexport default dataStore;\n\nwindow.dataStore = dataStore;\n","import dataStore from '../data/dataStore';\n\nexport function connectFirebase(handleData) {\n  const firebaseConfig = {\n    apiKey: 'AIzaSyBwtSg-c3xYVJkNSDA49afwTxu6rA2JBDI',\n    authDomain: 'kottans-app.firebaseapp.com',\n    databaseURL: 'https://kottans-app-default-rtdb.firebaseio.com',\n    projectId: 'kottans-app',\n    storageBucket: 'kottans-app.appspot.com',\n    messagingSenderId: '558738104058',\n    appId: '1:558738104058:web:096c34066c87562a5df343',\n    measurementId: 'G-MDSKRH794G',\n  };\n\n  firebase.initializeApp(firebaseConfig);\n\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      dataStore.auth.UID = user.uid;\n\n      user\n        .getIdToken()\n        .then(token => (dataStore.auth.TOKEN = token))\n        .then(() => getUserDB())\n        .then(data => handleData(data))\n        .catch(/* error => fconsole.log(error.message) */);\n    } else {\n      //jconsole.log('need login');\n    }\n  });\n}\n\nasync function initializeUserDB(uid) {\n  let userDB = {\n    transactions: '',\n    balance: '',\n    categories: {\n      outcome: ['Одежда', 'Транспорт', 'Услуги', 'Здоровье', 'Питание', 'Гигиена', 'Другое'],\n      income: ['Зарплата', 'Фриланс', 'Подарок', 'Другое'],\n    },\n  };\n\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${uid}.json?auth=${TOKEN}`,\n    {\n      method: 'PUT',\n      body: JSON.stringify(userDB),\n    },\n  );\n\n  let result = await response.json();\n}\n\nfunction signout() {\n  firebase.auth().signOut();\n}\n\nfunction signin(email) {\n  firebase\n    .auth()\n    .signInWithEmailAndPassword(email, '135790')\n    .then(userCredential => {\n      var user = userCredential.user;\n    })\n    .catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n}\n\nexport function register(mail) {\n  firebase\n    .auth()\n    .createUserWithEmailAndPassword(mail, '135790')\n    .then(userCredential => {\n      var user = userCredential.user;\n      dataStore.auth.UID = user.uid;\n\n      return user;\n    })\n    .then(user => {\n      return user.getIdToken();\n    })\n    .then(token => {\n      dataStore.auth.TOKEN = token;\n    })\n    .then(() => {\n      initializeUserDB(dataStore.auth.UID);\n    })\n    .catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n}\n\n/* не нужна, т.к. нужен и баланс же */\nexport async function getTransactions() {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/transactions.json?auth=${dataStore.auth.TOKEN}`,\n  );\n\n  let result = await response.json();\n  dataStore.userData.transactions = result;\n}\n\nexport async function addNewTransaction(transaction) {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/transactions.json?auth=${dataStore.auth.TOKEN}`,\n    {\n      method: 'POST',\n      body: JSON.stringify(transaction),\n    },\n  );\n\n  let result = await response.json();\n\n  getTransactions();\n}\n\nexport async function setBalance(balance) {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/balance.json?auth=${dataStore.auth.TOKEN}`,\n    {\n      method: 'PUT',\n      body: JSON.stringify(balance),\n    },\n  );\n\n  let result = await response.json();\n}\n\nexport async function getBalance() {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/balance.json?auth=${dataStore.auth.TOKEN}`,\n  );\n\n  let result = await response.json();\n\n  dataStore.userData.balance = result;\n}\n\nexport async function getCategories() {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/categories.json?auth=${dataStore.auth.TOKEN}`,\n  );\n\n  let result = await response.json();\n\n  dataStore.userData.categories = result;\n}\n\nexport async function getUserDB() {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}.json?auth=${dataStore.auth.TOKEN}`,\n  );\n\n  let result = await response.json();\n\n  return result;\n}\n\nexport async function removeTransaction(id) {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/transactions/${id}.json?auth=${dataStore.auth.TOKEN}`,\n    {\n      method: 'DELETE',\n    },\n  );\n\n  let result = await response.json();\n}\n\n// надо бы PATH\nexport async function editTransaction(id, data) {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/transactions/${id}.json?auth=${dataStore.auth.TOKEN}`,\n    {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    },\n  );\n\n  let result = await response.json();\n}\n","/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nexport const createElement = (tag, props, ...children) => {\n  if (typeof tag === 'function') {\n    /*\n      Passing children as the 2nd argument is required as jsx transformer puts component functions\n      and regular tags in wrapper functions that expect children as the 2nd param\n     */\n    return tag({ ...props, children }, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else {\n            element.setAttribute(name, value);\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\n\nimport styles from '../style';\nimport renderApp from '../framework/render';\nimport dataStore from '../data/dataStore';\n\nexport default function Main({ balance }) {\n  return (\n    <>\n      <div class={styles.main}>\n        <span>BALANCE: {balance}</span>\n\n        <button class={styles['btn-add']} onClick={openTransactionForm}>\n          +\n        </button>\n      </div>\n    </>\n  );\n}\n\nfunction openTransactionForm() {\n  dataStore.transactionForm.data = {\n    sum: '',\n    date: Date.now(),\n    category: 1,\n    comment: '',\n  };\n  dataStore.transactionForm.isOpened = true;\n\n  renderApp();\n  document.forms[0].sum.focus();\n}\n","export function getHTMLDate(timestamp) {\n  const d = new Date(timestamp);\n\n  const DD = d.getDate() > 9 ? d.getDate() : `0${d.getDate()}`;\n  const MM = d.getMonth() + 1 > 9 ? d.getMonth() + 1 : `0${d.getMonth() + 1}`;\n  const YYYY = d.getFullYear();\n\n  const HH = d.getHours() > 9 ? d.getHours() : `0${d.getHours()}`;\n  const MI = d.getMinutes() > 9 ? d.getMinutes() : `0${d.getMinutes()}`;\n\n  return `${YYYY}-${MM}-${DD}T${HH}:${MI}`;\n}\n\nexport function getDateString(timestamp) {\n  const d = new Date(timestamp);\n\n  const DD = d.getDate() > 9 ? d.getDate() : `0${d.getDate()}`;\n  const MM = d.getMonth() + 1 > 9 ? d.getMonth() + 1 : `0${d.getMonth() + 1}`;\n  const YYYY = d.getFullYear();\n\n  const HH = d.getHours() > 9 ? d.getHours() : `0${d.getHours()}`;\n  const MI = d.getMinutes() > 9 ? d.getMinutes() : `0${d.getMinutes()}`;\n\n  return `${DD}.${MM}.${YYYY} - ${HH}:${MI}`;\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\n\nimport styles from '../style';\nimport renderApp from '../framework/render';\nimport { getDateString } from '../utils';\nimport { removeTransaction, setBalance, getUserDB } from '../data/rest';\nimport dataStore from '../data/dataStore';\n\nexport default function List({ transactions }) {\n  let totalSum = 0;\n\n  const ListItems = transactions.map(({ id, date, category, comment, sum }) => {\n    const categoryGroup = sum < 0 ? 'outcome' : 'income';\n    totalSum += sum;\n\n    return (\n      <li id={id} class={styles['list-item']}>\n        <span style=\"width:30%\">{getDateString(date)}</span>\n        <span style=\"width:15%\">{sum}</span>\n        <span>{dataStore.userData.categories[categoryGroup][category]}</span>\n        <span style=\"width:25%\">{comment}</span>\n\n        <button class={styles['btn-edit']} onclick={loadTransactionInForm}>\n          🖉\n        </button>\n\n        <button class={styles['btn-delete']} onclick={deleteTransaction}>\n          X\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <ul class={styles.list}>\n      {ListItems}\n      <li>sum: {totalSum}</li>\n    </ul>\n  );\n}\n\nfunction loadTransactionInForm(e) {\n  const transactionID = e.target.parentElement.id;\n  dataStore.transactionForm.transactionId = transactionID;\n\n  // не нужна деструктуризцаия?\n  dataStore.transactionForm.data = {\n    ...dataStore.userData.transactions.find(item => item.id === transactionID),\n  };\n\n  dataStore.transactionForm.isOpened = true;\n  renderApp();\n  document.forms[0].sum.focus();\n}\n\nfunction deleteTransaction(e) {\n  const id = e.target.parentElement.id;\n  const newBalance =\n    dataStore.userData.balance - dataStore.userData.transactions.find(item => item.id === id).sum;\n\n  removeTransaction(id)\n    .then(() => setBalance(newBalance))\n    .then(() => getUserDB())\n    .then(data => {\n      dataStore.setUserData(data);\n      renderApp();\n    });\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\n\nimport styles from '../style';\nimport renderApp from '../framework/render';\nimport dataStore from '../data/dataStore';\nimport { getHTMLDate } from '../utils';\n\nexport default function Filters() {\n  /* \n    Меняем флаги - это состояние фльтров (в частности радиобаттонов), во-первых\n    При этом нужно получить новый массив для рендеринга\n    1. Это может делать сам рендерящийся компонент при каждом рендеринге, на основе флагов\n    2. Отфильтрованный массив можно хранить в стейте\n       Вопрос в том, кто будет это делать.\n       Этот массив должен формироваться при каждом событии из двух групп:\n        1. При изменении состояния фильтров\n        2. При изменении оригинального массива (добавление, удаление, редактирование)\n\n        Вот, кстати, интересна первая группа. Выходит, каждый раз при обновлении оригинального массива должна вызываться некая функция, которая на основании флагов сформирует второй массив. Эта функция должна вызываться в хендлерах добавления, удаления, редактирования. Т.е. ее надо будет откуда-то импортировать в каждый из этих файлов. \n        И ее надо будет импортировать, очевидно, в Filters.\n        Она явно не должна быть расположена в Filters. \n        ТОГДА ГДЕ???\n\n        Странно, наверное, держать в utils функцию, которая должна полагаться на стейт.\n        Странно что-то такое утилитарное импортировать из компонента в другой компонент.\n\n        И еще, setUserData и selectTransactions в чем-то же схожи. Первая формирует что-то в стейте на основе входных данных, вторая делает то же самое. \n        Тогда может они стоят отдельного модуля?\n        Ну, или же лучше оставить их там, где они есть...\n  */\n\n  function handler({ target }) {\n    if (target.name == 'sortBySum') {\n      dataStore.sortByDate = 0;\n      dataStore.sortBySum = +target.value;\n      dataStore.selectTransactions();\n      renderApp();\n    } else if (target.name == 'sortByDate') {\n      dataStore.sortBySum = 0;\n      dataStore.sortByDate = +target.value;\n      dataStore.selectTransactions();\n      renderApp();\n    } else if (target.name == 'filterMoneyway') {\n      dataStore.filterMoneyway = +target.value;\n      dataStore.selectTransactions();\n      renderApp();\n    }\n  }\n\n  const SortBySum = (\n    <>\n      sortBySum\n      <label>\n        <input type=\"radio\" name=\"sortBySum\" value=\"0\" checked={dataStore.sortBySum === 0} />\n        Off\n      </label>\n      <label>\n        <input type=\"radio\" name=\"sortBySum\" value=\"1\" checked={dataStore.sortBySum === 1} />\n        Up\n      </label>\n      <label>\n        <input type=\"radio\" name=\"sortBySum\" value=\"-1\" checked={dataStore.sortBySum === -1} />\n        Down\n      </label>\n    </>\n  );\n\n  const SortByDate = (\n    <>\n      sortByDate\n      <label>\n        <input type=\"radio\" name=\"sortByDate\" value=\"0\" checked={dataStore.sortByDate === 0} />\n        Off\n      </label>\n      <label>\n        <input type=\"radio\" name=\"sortByDate\" value=\"1\" checked={dataStore.sortByDate === 1} />\n        Up\n      </label>\n      <label>\n        <input type=\"radio\" name=\"sortByDate\" value=\"-1\" checked={dataStore.sortByDate === -1} />\n        Down\n      </label>\n    </>\n  );\n\n  const filterMoneyway = (\n    <>\n      filterMoneyway\n      <label>\n        <input\n          type=\"radio\"\n          name=\"filterMoneyway\"\n          value=\"0\"\n          checked={dataStore.filterMoneyway === 0}\n        />\n        All\n      </label>\n      <label>\n        <input\n          type=\"radio\"\n          name=\"filterMoneyway\"\n          value=\"1\"\n          checked={dataStore.filterMoneyway === 1}\n        />\n        Income\n      </label>\n      <label>\n        <input\n          type=\"radio\"\n          name=\"filterMoneyway\"\n          value=\"-1\"\n          checked={dataStore.filterMoneyway === -1}\n        />\n        Outcome\n      </label>\n    </>\n  );\n\n  const DateFilter = ({ value }) => {\n    // Явно нужен DateInput который можно переиспользовать.\n\n    // собираюсь писать хендлеры...\n    function DateInput({ value, name, handler }) {\n      return (\n        <input\n          name={name}\n          type=\"datetime-local\"\n          placeholder=\"date\"\n          value={getHTMLDate(value)}\n          onchange={handler}\n        />\n      );\n    }\n\n    function setDateFilter({ target }) {\n      dataStore.filterDate[target.name] = new Date(target.value).getTime();\n      dataStore.selectTransactions();\n      renderApp();\n    }\n\n    return (\n      <>\n        <DateInput value={value.start} name=\"firstDate\" handler={setDateFilter} />\n        <DateInput value={value.end} name=\"lastDate\" handler={setDateFilter} />\n      </>\n    );\n  };\n\n  return (\n    <div onchange={handler}>\n      {SortBySum}\n      <br />\n      {SortByDate}\n      <br />\n      {filterMoneyway}\n      <br />\n      <DateFilter\n        value={{ start: dataStore.filterDate.firstDate, end: dataStore.filterDate.lastDate }}\n      />\n    </div>\n  );\n}\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\n\nimport styles from '../style';\nimport renderApp from '../framework/render';\nimport { editTransaction, setBalance, getUserDB, addNewTransaction } from '../data/rest';\nimport { getHTMLDate } from '../utils';\nimport dataStore from '../data/dataStore';\n\nlet moneyWay;\n\nexport default function TransactionForm({ transaction }) {\n  moneyWay = +transaction.sum > 0 ? 'income' : 'outcome';\n  const { comment, category } = transaction;\n  const sum = transaction.sum ? Math.abs(transaction.sum) : '';\n  const date = getHTMLDate(transaction.date);\n\n  return (\n    <form class={styles.form} onsubmit={addTransactionInDB}>\n      <Sum value={sum} />\n      <DateInput value={date} />\n      <Category value={category} />\n      <Comment value={comment} />\n\n      <button type=\"button\" class=\"cancel\" onclick={cancel}>\n        cancel\n      </button>\n      <input class=\"add\" type=\"submit\" value=\"add\" />\n    </form>\n  );\n}\n\nfunction Sum({ value }) {\n  return <input type=\"number\" placeholder=\"sum\" name=\"sum\" min=\"1\" value={value} required />;\n}\n\nfunction Category({ value }) {\n  const handler = e => {\n    document.querySelector('#categories').innerHTML = dataStore.userData.categories[e.target.value]\n      .map((category, i) => `<option value=${i}>${category}</option>`)\n      .join('');\n  };\n\n  return (\n    <>\n      <div onchange={handler}>\n        <label>\n          <input type=\"radio\" name=\"moneyWay\" value=\"income\" checked={moneyWay == 'income'} />\n          income\n        </label>\n\n        <label>\n          <input type=\"radio\" name=\"moneyWay\" value=\"outcome\" checked={moneyWay == 'outcome'} />\n          outcome\n        </label>\n      </div>\n\n      <br />\n\n      <select name=\"category\" id=\"categories\">\n        {dataStore.userData.categories[moneyWay].map((category, i) => (\n          <option selected={value == i} value={i}>\n            {category}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n}\n\nfunction DateInput({ value }) {\n  return <input name=\"date\" type=\"datetime-local\" placeholder=\"date\" value={value} />;\n}\n\nfunction Comment({ value }) {\n  return <input type=\"text\" placeholder=\"comment\" name=\"comment\" value={value} />;\n}\n\nfunction addTransactionInDB(e) {\n  e.preventDefault();\n\n  const { sum, date, category, comment, moneyWay } = e.target.elements;\n\n  const newTransaction = {\n    sum: moneyWay.value == 'income' ? +sum.value : -sum.value,\n    date: new Date(date.value).getTime(),\n    category: +category.value,\n    comment: comment.value,\n  };\n\n  const initialFormSum = +dataStore.transactionForm.data.sum;\n  const newBalance = dataStore.userData.balance + newTransaction.sum - initialFormSum;\n\n  // вот здесь чет не очт\n  if (dataStore.transactionForm.transactionId) {\n    editTransaction(dataStore.transactionForm.transactionId, newTransaction)\n      .then(() => {\n        dataStore.transactionForm.isOpened = false;\n        renderApp();\n      })\n      .then(() => setBalance(newBalance))\n      .then(() => getUserDB())\n      .then(data => {\n        dataStore.setUserData(data);\n        dataStore.selectTransactions();\n        renderApp();\n      });\n  } else {\n    addNewTransaction(newTransaction)\n      .then(() => {\n        dataStore.transactionForm.isOpened = false;\n        renderApp();\n      })\n      .then(() => setBalance(newBalance))\n      .then(() => getUserDB())\n      .then(data => {\n        dataStore.setUserData(data);\n        renderApp();\n      });\n  }\n}\n\nfunction cancel(e) {\n  e.preventDefault();\n  dataStore.transactionForm.isOpened = false;\n  renderApp();\n}\n\n/* function setUserData(data) {\n  dataStore.userData.balance = data.balance;\n  dataStore.userData.transactions = data.transactions;\n  dataStore.userData.categories = data.categories;\n  renderApp();\n} */\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\n\nimport dataStore from '../data/dataStore';\nimport Main from '../components/Main';\nimport List from '../components/List';\nimport Filters from '../components/Filters';\nimport TransactionForm from '../components/TransactionForm';\nimport styles from '../style.css';\n\nexport default function App() {\n  const { balance, transactions } = dataStore.userData;\n  const transaction = dataStore.transactionForm.data;\n  const showForm = dataStore.transactionForm.isOpened;\n\n  if (!dataStore.userDataIsLoaded) {\n    return <h1>Loading...</h1>;\n  } else {\n    return (\n      <div class={styles['app-container']}>\n        <Main balance={balance} />\n        <List transactions={dataStore.filteredTransactions} />\n        <Filters />\n        {showForm ? <TransactionForm transaction={transaction} /> : null}\n      </div>\n    );\n  }\n}\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\nimport { createElement, createFragment } from './element';\nimport App from '../components/App';\n\nexport default function renderApp() {\n  const app = document.querySelector('#app');\n  app.innerHTML = '';\n  app.appendChild(<App />);\n}\n","import { connectFirebase } from './data/rest.js';\nimport renderApp from './framework/render';\nimport dataStore from './data/dataStore';\n\nrenderApp();\n\n// коллбэк можно запихнуть в rest, а может и вообще сделать для ФБ отдельный\nconnectFirebase(data => {\n  dataStore.setUserData(data);\n\n  // это неверно для разлогина!!!\n  // вообще это должно показываться когда юзер вошел, иначе ж будет форма логина\n  dataStore.userDataIsLoaded = true;\n  renderApp();\n});\n"]}