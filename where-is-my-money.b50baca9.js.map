{"version":3,"sources":["utils.js","rest.js","index.js"],"names":["formatDate","timestamp","d","Date","DD","getDate","MM","getMonth","getFullYear","getHours","getMinutes","getDateString","connectFirebase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","onAuthStateChanged","user","window","UID","uid","getIdToken","then","token","TOKEN","getUserDB","data","userDataStore","balance","transactions","categories","renderApp","catch","initializeUserDB","userDB","response","fetch","method","body","JSON","stringify","outcome","income","json","signout","signOut","signin","email","signInWithEmailAndPassword","userCredential","error","code","message","register","mail","createUserWithEmailAndPassword","getTransactions","result","addNewTransaction","transaction","setBalance","getBalance","getCategories","removeTransaction","id","editTransaction","Main","styles","main","List","items","sum","date","category","comment","categoryGroup","list","TransactionForm","moneyWay","Math","abs","form","value","dateValue","content","chosenCategoryID","e","document","querySelector","innerHTML","target","map","i","join","Category","storeUserData","isOpened","transactionId","cancel","preventDefault","hideForm","loadEmptyForm","now","showForm","forms","focus","loadTransactionInForm","transactionID","parentElement","deleteTransaction","newBalance","addTransactionInDB","elements","newTransaction","getTime","initialFormSum"],"mappings":"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","file":"where-is-my-money.b50baca9.js","sourceRoot":"..","sourcesContent":["export function formatDate(timestamp) {\n  const d = new Date(timestamp);\n\n  const DD = d.getDate() > 9 ? d.getDate() : `0${d.getDate()}`;\n  const MM = d.getMonth() + 1 > 9 ? d.getMonth() + 1 : `0${d.getMonth() + 1}`;\n  const YYYY = d.getFullYear();\n\n  const HH = d.getHours() > 9 ? d.getHours() : `0${d.getHours()}`;\n  const MI = d.getMinutes() > 9 ? d.getMinutes() : `0${d.getMinutes()}`;\n\n  return `${YYYY}-${MM}-${DD}T${HH}:${MI}`;\n}\n\nexport function getDateString(timestamp) {\n  const d = new Date(timestamp);\n\n  const DD = d.getDate() > 9 ? d.getDate() : `0${d.getDate()}`;\n  const MM = d.getMonth() + 1 > 9 ? d.getMonth() + 1 : `0${d.getMonth() + 1}`;\n  const YYYY = d.getFullYear();\n\n  const HH = d.getHours() > 9 ? d.getHours() : `0${d.getHours()}`;\n  const MI = d.getMinutes() > 9 ? d.getMinutes() : `0${d.getMinutes()}`;\n\n  return `${DD}.${MM}.${YYYY} - ${HH}:${MI}`;\n}\n","export function connectFirebase() {\n  const firebaseConfig = {\n    apiKey: 'AIzaSyBwtSg-c3xYVJkNSDA49afwTxu6rA2JBDI',\n    authDomain: 'kottans-app.firebaseapp.com',\n    databaseURL: 'https://kottans-app-default-rtdb.firebaseio.com',\n    projectId: 'kottans-app',\n    storageBucket: 'kottans-app.appspot.com',\n    messagingSenderId: '558738104058',\n    appId: '1:558738104058:web:096c34066c87562a5df343',\n    measurementId: 'G-MDSKRH794G',\n  };\n\n  firebase.initializeApp(firebaseConfig);\n\n  // добавляю обзервер\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      window.UID = user.uid;\n\n      user\n        .getIdToken()\n        .then(token => (window.TOKEN = token))\n        .then(() => getUserDB())\n        .then(data => {\n          window.userDataStore.balance = data.balance;\n          window.userDataStore.transactions = data.transactions;\n          window.userDataStore.categories = data.categories;\n        })\n        .then(() => window.renderApp())\n        .catch(/* error => fconsole.log(error.message) */);\n    } else {\n      //jconsole.log('need login');\n    }\n  });\n}\n\nasync function initializeUserDB(uid) {\n  let userDB = {\n    transactions: '',\n    balance: '',\n    categories: {\n      outcome: ['Одежда', 'Транспорт', 'Услуги', 'Здоровье', 'Питание', 'Гигиена', 'Другое'],\n      income: ['Зарплата', 'Фриланс', 'Подарок', 'Другое'],\n    },\n  };\n\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${uid}.json?auth=${TOKEN}`,\n    {\n      method: 'PUT',\n      body: JSON.stringify(userDB),\n    },\n  );\n\n  let result = await response.json();\n}\n\nfunction signout() {\n  firebase.auth().signOut();\n}\n\nfunction signin(email) {\n  firebase\n    .auth()\n    .signInWithEmailAndPassword(email, '135790')\n    .then(userCredential => {\n      var user = userCredential.user;\n    })\n    .catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n}\n\nexport function register(mail) {\n  firebase\n    .auth()\n    .createUserWithEmailAndPassword(mail, '135790')\n    .then(userCredential => {\n      var user = userCredential.user;\n      window.UID = user.uid;\n\n      return user;\n    })\n    .then(user => {\n      return user.getIdToken();\n    })\n    .then(token => {\n      window.TOKEN = token;\n    })\n    .then(() => {\n      initializeUserDB(UID);\n    })\n    .catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n}\n\n/* не нужна, т.к. нужен и баланс же */\nexport async function getTransactions() {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${window.UID}/transactions.json?auth=${window.TOKEN}`,\n  );\n\n  let result = await response.json();\n  window.userDataStore.transactions = result;\n}\n\nexport async function addNewTransaction(transaction) {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${window.UID}/transactions.json?auth=${window.TOKEN}`,\n    {\n      method: 'POST',\n      body: JSON.stringify(transaction),\n    },\n  );\n\n  let result = await response.json();\n\n  getTransactions();\n}\n\nexport async function setBalance(balance) {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${window.UID}/balance.json?auth=${window.TOKEN}`,\n    {\n      method: 'PUT',\n      body: JSON.stringify(balance),\n    },\n  );\n\n  let result = await response.json();\n}\n\nexport async function getBalance() {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${window.UID}/balance.json?auth=${window.TOKEN}`,\n  );\n\n  let result = await response.json();\n\n  window.userDataStore.balance = result;\n}\n\nexport async function getCategories() {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${window.UID}/categories.json?auth=${window.TOKEN}`,\n  );\n\n  let result = await response.json();\n\n  window.userDataStore.categories = result;\n}\n\nexport async function getUserDB() {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${window.UID}.json?auth=${window.TOKEN}`,\n  );\n\n  let result = await response.json();\n\n  // window.userDataStore.balance = result.balance;\n  // window.userDataStore.transactions = result.transactions;\n  // window.userDataStore.categories = result.categories;\n\n  return result;\n}\n\nexport async function removeTransaction(id) {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${UID}/transactions/${id}.json?auth=${window.TOKEN}`,\n    {\n      method: 'DELETE',\n    },\n  );\n\n  let result = await response.json();\n}\n\nexport async function editTransaction(id, data) {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${window.UID}/transactions/${id}.json?auth=${window.TOKEN}`,\n    {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    },\n  );\n\n  let result = await response.json();\n}\n","import { formatDate, getDateString } from './utils';\nimport styles from './style.css';\nimport {\n  connectFirebase,\n  register,\n  removeTransaction,\n  setBalance,\n  getUserDB,\n  getTransactions,\n  addNewTransaction,\n  getBalance,\n  getCategories,\n  editTransaction,\n} from './rest.js';\n\nwindow.userDataStore = {\n  categories: null,\n  balance: null,\n  transactions: null,\n  form: {\n    isOpened: false,\n    transactionId: null,\n    data: null,\n  },\n};\n\nconnectFirebase();\n\ndocument.querySelector('#app').innerHTML = `Loading...`;\n\nwindow.renderApp = () => {\n  const { balance, transactions, form } = userDataStore;\n\n  document.querySelector('#app').innerHTML = `\n    <div class=${styles['app-container']}>\n      ${Main(balance)}\n      ${form.isOpened ? TransactionForm(form.data) : ''}\n      ${List(transactions)}\n    </div>\n  `;\n};\n\nfunction Main(balance) {\n  return `\n    <div class=\"${styles.main}\">\n      <span>BALANCE: ${balance}</span>\n\n      <button\n        class=${styles['btn-add']}\n        onclick=\"loadEmptyForm()\"\n      >\n        +\n      </button>\n    </div>\n  `;\n}\n\nfunction List(transactions) {\n  let items = ``;\n\n  for (let id in transactions) {\n    const { sum, date, category, comment } = transactions[id];\n    const categoryGroup = sum < 0 ? 'outcome' : 'income';\n\n    items += `\n      <li id=\"${id}\" class=${styles['list-item']}>\n        <span style=\"width:30%\">${getDateString(date)}</span>\n        <span style=\"width:15%\">${sum}</span>\n        <span>${userDataStore.categories[categoryGroup][category]}</span>\n        <span style=\"width:25%\">${comment}</span>\n\n        <button\n          \n          class=${styles['btn-edit']}\n          onclick=\"loadTransactionInForm(event)\"\n        >\n          🖉\n        </button>\n\n        <button\n          class=${styles['btn-delete']}\n          onclick=\"deleteTransaction(event)\"\n        >\n          X\n        </button>\n      </li>\n    `;\n  }\n\n  return `<ul class=${styles.list}>${items}</ul>`;\n}\n\nfunction TransactionForm(transaction) {\n  const moneyWay = +transaction.sum > 0 ? 'income' : 'outcome';\n  const { comment, category } = transaction;\n  const sum = transaction.sum ? Math.abs(transaction.sum) : '';\n  const date = formatDate(transaction.date);\n\n  return `\n    <form class=${styles.form} onsubmit=\"addTransactionInDB(event)\">\n      ${Sum(sum)}\n      ${DateInput(date)}\n      ${Comment(comment)}\n      ${Category(category)}\n\n      <button type=\"button\" class=\"cancel\" onclick=\"cancel(event)\">\n        cancel\n      </button>\n\n      <input class=\"add\" type=\"submit\" value=\"add\" />\n    </form>\n  `;\n\n  function Sum(value) {\n    return `\n      <input\n        type=\"number\"\n        placeholder=\"sum\"\n        name=\"sum\"\n        min=\"1\"\n        value =\"${value}\"\n        required\n      >\n    `;\n  }\n\n  function Category(chosenCategoryID) {\n    const handler = e => {\n      document.querySelector('#categories').innerHTML = userDataStore.categories[e.target.value]\n        .map((category, i) => `<option value=${i}>${category}</option>`)\n        .join('');\n    };\n\n    return `\n      <div onchange=\"(${handler})(event)\">\n        <label>\n          <input\n            type=\"radio\"\n            name=\"moneyWay\"\n            value=\"income\"\n            ${moneyWay == 'income' ? 'checked' : ''}\n          />\n          income\n        </label>\n\n        <label>\n          <input \n            type=\"radio\"\n            name=\"moneyWay\" \n            value=\"outcome\" \n            ${moneyWay == 'outcome' ? 'checked' : ''}\n          />\n          outcome\n        </label>\n      </div>\n\n      <br>\n\n      <select name=\"category\" id=\"categories\">\n        ${userDataStore.categories[moneyWay]\n          .map(\n            (category, i) => `\n              <option ${chosenCategoryID == i ? 'selected' : ''} value=${i}> \n                ${category}\n              </option>\n            `,\n          )\n          .join('')}\n      </select>\n    `;\n  }\n\n  function DateInput(dateValue) {\n    return `\n      <input\n        name=\"date\"\n        type=\"datetime-local\" \n        placeholder=\"date\"\n        value=${dateValue}\n      />\n    `;\n  }\n\n  function Comment(content) {\n    return `\n      <input \n        type=\"text\"\n        placeholder=\"comment\"\n        name=\"comment\"\n        value=\"${content}\"\n      />\n    `;\n  }\n}\n\n//////////////////////////////////////////////////////\n\nfunction storeUserData(data) {\n  window.userDataStore.balance = data.balance;\n  window.userDataStore.transactions = data.transactions;\n  window.userDataStore.categories = data.categories;\n}\n\n////////////////////////////////////////\nwindow.cancel = function (e) {\n  e.preventDefault();\n  hideForm();\n  renderApp();\n};\n\nwindow.loadEmptyForm = function () {\n  userDataStore.form.data = {\n    sum: '',\n    date: Date.now(),\n    category: 1,\n    comment: '',\n  };\n\n  showForm();\n  renderApp();\n  document.forms[0].sum.focus();\n};\n\nwindow.loadTransactionInForm = function (e) {\n  const transactionID = e.target.parentElement.id;\n  userDataStore.form.transactionId = transactionID;\n\n  userDataStore.form.data = { ...userDataStore.transactions[transactionID] };\n\n  showForm();\n  renderApp();\n  document.forms[0].sum.focus();\n};\n\n////////////////////////////////////////////////////\n\nwindow.deleteTransaction = function (e) {\n  const id = e.target.parentElement.id;\n  const newBalance = userDataStore.balance - userDataStore.transactions[id].sum;\n\n  removeTransaction(id)\n    .then(() => setBalance(newBalance))\n    .then(() => getUserDB())\n    .then(result => storeUserData(result))\n    .then(() => renderApp());\n};\n\nwindow.addTransactionInDB = function (e) {\n  e.preventDefault();\n\n  const { sum, date, category, comment, moneyWay } = e.target.elements;\n\n  const newTransaction = {\n    sum: moneyWay.value == 'income' ? +sum.value : -sum.value,\n    date: new Date(date.value).getTime(),\n    category: +category.value,\n    comment: comment.value,\n  };\n\n  const initialFormSum = +userDataStore.form.data.sum;\n  const newBalance = userDataStore.balance + newTransaction.sum - initialFormSum;\n\n  // вот здесь чет не очт\n  if (userDataStore.form.transactionId) {\n    editTransaction(userDataStore.form.transactionId, newTransaction)\n      .then(() => {\n        hideForm();\n        window.renderApp();\n      })\n      .then(() => setBalance(newBalance))\n      .then(() => getUserDB())\n      .then(result => storeUserData(result))\n      .then(() => window.renderApp());\n  } else {\n    addNewTransaction(newTransaction)\n      .then(() => {\n        hideForm();\n        window.renderApp();\n      })\n      .then(() => setBalance(newBalance))\n      .then(() => getUserDB())\n      .then(result => storeUserData(result))\n      .then(() => window.renderApp());\n  }\n};\n\nwindow.showForm = function () {\n  userDataStore.form.isOpened = true;\n};\n\nwindow.hideForm = function () {\n  userDataStore.form.isOpened = false;\n};\n\nwindow.formatDate = formatDate;\n"]}