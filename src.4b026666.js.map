{"version":3,"sources":["utils.js","framework/hooks.js","framework/element.js","framework/render.js","data/dataStore.js","data/rest.js","components/Main.js","components/Filters.js","components/List.js","components/TransactionForm/Sum.js","components/TransactionForm/Category.js","components/TransactionForm/DateInput.js","components/TransactionForm/Comment.js","components/TransactionForm/ToggleMoneyWay.js","components/TransactionForm/TransactionForm.js","components/App.js","index.js"],"names":["getHTMLDate","timestamp","d","Date","DD","getDate","MM","getMonth","getFullYear","getHours","getMinutes","getDateString","isFunction","func","current","shouldReRender","wipComponent","hookIndex","createFunctionElement","tag","props","children","hooks","useState","initial","oldHook","hook","state","queue","forEach","action","push","useEffect","effect","deps","oldDeps","undefined","hasChanged","hasDepsChanged","unmount","window","removeEventListener","addEventListener","prevDeps","nextDeps","length","some","dep","index","useContext","Context","value","createElement","element","DocumentFragment","document","Object","entries","name","startsWith","toLowerCase","substr","includes","removeAttribute","setAttribute","e","console","error","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","render","timer","Component","target","requestAnimationFrame","workLoop","replaceChildren","cancelAnimationFrame","dataStore","auth","TOKEN","UID","userData","categories","balance","transactions","filteredTransactions","sortBySum","sortByDate","filterMoneyway","filterDate","firstDate","lastDate","now","userDataIsLoaded","transactionForm","isOpened","transactionId","data","setUserData","selectTransactions","map","key","id","filter","item","date","sum","sort","a","b","connectFirebase","handleData","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","signin","onAuthStateChanged","user","uid","getIdToken","then","token","getUserDB","catch","initializeUserDB","userDB","response","fetch","method","body","JSON","stringify","outcome","income","json","signout","signOut","email","signInWithEmailAndPassword","userCredential","code","message","register","mail","createUserWithEmailAndPassword","getTransactions","result","addNewTransaction","transaction","setBalance","getBalance","getCategories","removeTransaction","editTransaction","Main","openForm","styles","main","Filters","setFilters","handler","filters","getTime","DateInput","List","totalSum","ListItems","getFilteredTransactions","category","comment","categoryGroup","color","parentElement","deleteTransaction","list","newBalance","Sum","Category","i","Comment","ToggleMoneyWay","TransactionForm","returnData","initialTransactionValues","setData","isIncome","setIsIncome","updateData","form","preventDefault","Math","abs","App","setIsLoaded","formIsOpen","setFormIsOpen","currentTransactionID","setCurrentTransactionID","flag","setFlag","formHandler","getElementById"],"mappings":"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","file":"src.4b026666.js","sourceRoot":"../src","sourcesContent":["export function getHTMLDate(timestamp) {\n  const d = new Date(timestamp);\n\n  const DD = d.getDate() > 9 ? d.getDate() : `0${d.getDate()}`;\n  const MM = d.getMonth() + 1 > 9 ? d.getMonth() + 1 : `0${d.getMonth() + 1}`;\n  const YYYY = d.getFullYear();\n\n  const HH = d.getHours() > 9 ? d.getHours() : `0${d.getHours()}`;\n  const MI = d.getMinutes() > 9 ? d.getMinutes() : `0${d.getMinutes()}`;\n\n  return `${YYYY}-${MM}-${DD}T${HH}:${MI}`;\n}\n\nexport function getDateString(timestamp) {\n  const d = new Date(timestamp);\n\n  const DD = d.getDate() > 9 ? d.getDate() : `0${d.getDate()}`;\n  const MM = d.getMonth() + 1 > 9 ? d.getMonth() + 1 : `0${d.getMonth() + 1}`;\n  const YYYY = d.getFullYear();\n\n  const HH = d.getHours() > 9 ? d.getHours() : `0${d.getHours()}`;\n  const MI = d.getMinutes() > 9 ? d.getMinutes() : `0${d.getMinutes()}`;\n\n  return `${DD}.${MM}.${YYYY} - ${HH}:${MI}`;\n}\n\nexport const isFunction = func => typeof func === 'function';\n","import { isFunction } from '../utils';\n\nexport const current = {\n  shouldReRender: true,\n  wipComponent: null,\n  hookIndex: null,\n};\n\nexport function createFunctionElement(tag, props, children) {\n  current.wipComponent = tag;\n  current.hookIndex = 0;\n  current.wipComponent.hooks = current.wipComponent.hooks || [];\n\n  return tag({ ...props, children }, children);\n}\n\n// window.current = current;\n\nexport function useState(initial) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n  const hook = {\n    state: oldHook ? oldHook.state : initial,\n    queue: [],\n  };\n\n  const actions = oldHook ? oldHook.queue : [];\n\n  actions.forEach(action => {\n    // 2. но вот это не срабатывает, массив пустой\n    hook.state = isFunction(action) ? action(hook.state) : action;\n  });\n\n  // 1. экшн в hook.queue вроде пушится\n  const setState = action => {\n    current.shouldReRender = true;\n    hook.queue.push(action);\n  };\n\n  wipComponent.hooks[hookIndex] = hook;\n  current.hookIndex++;\n  return [hook.state, setState];\n}\n\nexport function useEffect(effect, deps) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n  const oldDeps = oldHook ? oldHook.deps : undefined;\n\n  const hasChanged = hasDepsChanged(oldDeps, deps);\n\n  current.hookIndex++;\n\n  if (!hasChanged) return;\n\n  if (oldHook && oldHook.unmount) {\n    window.removeEventListener('beforeunload', oldHook.unmount);\n  }\n\n  wipComponent.hooks[hookIndex] = {\n    unmount: effect(),\n    deps,\n  };\n\n  window.addEventListener('beforeunload', wipComponent.hooks[hookIndex].unmount);\n}\n\nconst hasDepsChanged = (prevDeps, nextDeps) =>\n  !prevDeps ||\n  !nextDeps ||\n  prevDeps.length !== nextDeps.length ||\n  prevDeps.some((dep, index) => dep !== nextDeps[index]);\n\nexport const useContext = Context => Context.value;\n","/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nimport { createFunctionElement } from './hooks';\nimport { isFunction } from '../utils';\n\nexport const createElement = (tag, props, ...children) => {\n  if (isFunction(tag)) {\n    /*\n       Passing children as the 2nd argument is required as jsx transformer puts component functions\n       and regular tags in wrapper functions that expect children as the 2nd param\n      */\n    return createFunctionElement(tag, props, children); // == tag({ ...props, children }, children)\n  }\n\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else {\n            element.setAttribute(name, value);\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\nimport { createElement } from './element';\nimport { current } from './hooks';\n\n/**\n * Renders a component and attaches it to the target DOM element\n * @param Component - function\n * @param target - DOM element to attach component to\n */\n\nlet timer;\n\nexport function render(Component, target) {\n  function workLoop() {\n    if (current.shouldReRender) {\n      current.shouldReRender = false;\n      target.replaceChildren(<Component />);\n    }\n\n    cancelAnimationFrame(timer);\n    timer = requestAnimationFrame(workLoop);\n  }\n  timer = requestAnimationFrame(workLoop);\n}\n\nexport default render;\n","const dataStore = {\n  auth: {\n    TOKEN: null,\n    UID: null,\n  },\n  userData: {\n    categories: null,\n    balance: null,\n    transactions: null,\n  },\n  filteredTransactions: null,\n  sortBySum: 0,\n  sortByDate: 0,\n  filterMoneyway: 0,\n  filterDate: {\n    firstDate: 0, // найти бы сразу минимальную дату\n    lastDate: Date.now(),\n  },\n  userDataIsLoaded: false,\n  transactionForm: {\n    isOpened: false,\n    transactionId: null,\n    data: null,\n  },\n  setUserData: setUserData,\n  selectTransactions: selectTransactions,\n};\n\nfunction setUserData({ balance, transactions, categories }) {\n  if (balance !== undefined) this.userData.balance = balance;\n  if (categories !== undefined) this.userData.categories = categories;\n  if (transactions !== undefined) {\n    this.userData.transactions = Object.entries(transactions).map(([key, value]) => ({\n      id: key,\n      ...value,\n    }));\n\n    this.selectTransactions();\n  }\n}\n\nfunction selectTransactions() {\n  this.filteredTransactions = [...this.userData.transactions];\n\n  this.filteredTransactions = this.filteredTransactions.filter(\n    item =>\n      item.date >= dataStore.filterDate.firstDate && item.date <= dataStore.filterDate.lastDate,\n  );\n\n  if (this.filterMoneyway != 0) {\n    this.filteredTransactions = this.filteredTransactions.filter(\n      item => this.filterMoneyway * item.sum < 0,\n    );\n  }\n\n  if (this.sortByDate != 0) {\n    this.filteredTransactions.sort((a, b) => this.sortByDate * (b.date - a.date));\n  }\n  if (this.sortBySum != 0) {\n    this.filteredTransactions.sort((a, b) => this.sortBySum * (a.sum - b.sum));\n  }\n}\n\nexport default dataStore;\n\nwindow.dataStore = dataStore;\n","import dataStore from '../data/dataStore';\n\nexport function connectFirebase(handleData) {\n  const firebaseConfig = {\n    apiKey: 'AIzaSyBwtSg-c3xYVJkNSDA49afwTxu6rA2JBDI',\n    authDomain: 'kottans-app.firebaseapp.com',\n    databaseURL: 'https://kottans-app-default-rtdb.firebaseio.com',\n    projectId: 'kottans-app',\n    storageBucket: 'kottans-app.appspot.com',\n    messagingSenderId: '558738104058',\n    appId: '1:558738104058:web:096c34066c87562a5df343',\n    measurementId: 'G-MDSKRH794G',\n  };\n\n  firebase.initializeApp(firebaseConfig);\n  signin('ponomarykov@gmail.com', '135790');\n\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      dataStore.auth.UID = user.uid;\n\n      user\n        .getIdToken()\n        .then(token => (dataStore.auth.TOKEN = token))\n        .then(() => getUserDB())\n        .then(data => handleData(data))\n        .catch(error => {\n          throw error;\n        });\n    } else {\n      /* acondsole.log('need login'); */\n    }\n  });\n}\n\nasync function initializeUserDB(uid) {\n  let userDB = {\n    transactions: '',\n    balance: '',\n    categories: {\n      outcome: ['Одежда', 'Транспорт', 'Услуги', 'Здоровье', 'Питание', 'Гигиена', 'Другое'],\n      income: ['Зарплата', 'Фриланс', 'Подарок', 'Другое'],\n    },\n  };\n\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${uid}.json?auth=${TOKEN}`,\n    {\n      method: 'PUT',\n      body: JSON.stringify(userDB),\n    },\n  );\n\n  let result = await response.json();\n}\n\nfunction signout() {\n  firebase.auth().signOut();\n}\n\nfunction signin(email = 'ponomarykov@gmail.com') {\n  firebase\n    .auth()\n    .signInWithEmailAndPassword(email, '135790')\n    .then(userCredential => {\n      var user = userCredential.user;\n    })\n    .catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n}\n\nexport function register(mail) {\n  firebase\n    .auth()\n    .createUserWithEmailAndPassword(mail, '135790')\n    .then(userCredential => {\n      var user = userCredential.user;\n      dataStore.auth.UID = user.uid;\n\n      return user;\n    })\n    .then(user => {\n      return user.getIdToken();\n    })\n    .then(token => {\n      dataStore.auth.TOKEN = token;\n    })\n    .then(() => {\n      initializeUserDB(dataStore.auth.UID);\n    })\n    .catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n}\n\n/* не нужна, т.к. нужен и баланс же */\nexport async function getTransactions() {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/transactions.json?auth=${dataStore.auth.TOKEN}`,\n  );\n\n  let result = await response.json();\n  dataStore.userData.transactions = result;\n}\n\nexport async function addNewTransaction(transaction) {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/transactions.json?auth=${dataStore.auth.TOKEN}`,\n    {\n      method: 'POST',\n      body: JSON.stringify(transaction),\n    },\n  );\n\n  let result = await response.json();\n\n  getTransactions();\n}\n\nexport async function setBalance(balance) {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/balance.json?auth=${dataStore.auth.TOKEN}`,\n    {\n      method: 'PUT',\n      body: JSON.stringify(balance),\n    },\n  );\n\n  let result = await response.json();\n}\n\nexport async function getBalance() {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/balance.json?auth=${dataStore.auth.TOKEN}`,\n  );\n\n  let result = await response.json();\n\n  dataStore.userData.balance = result;\n}\n\nexport async function getCategories() {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/categories.json?auth=${dataStore.auth.TOKEN}`,\n  );\n\n  let result = await response.json();\n\n  dataStore.userData.categories = result;\n}\n\nexport async function getUserDB() {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}.json?auth=${dataStore.auth.TOKEN}`,\n  );\n\n  let result = await response.json();\n\n  return result;\n}\n\nexport async function removeTransaction(id) {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/transactions/${id}.json?auth=${dataStore.auth.TOKEN}`,\n    {\n      method: 'DELETE',\n    },\n  );\n\n  let result = await response.json();\n}\n\n// надо бы PATH\nexport async function editTransaction(id, data) {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/transactions/${id}.json?auth=${dataStore.auth.TOKEN}`,\n    {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    },\n  );\n\n  let result = await response.json();\n}\n\nwindow.signout = signout;\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\n\nimport styles from '../style';\n\nexport default function Main({ balance, openForm }) {\n  return (\n    <div class={styles.main}>\n      <span>BALANCE: {balance}</span>\n\n      <button class={styles['btn-add']} onClick={openForm}>\n        +\n      </button>\n    </div>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\n\nimport styles from '../style';\nimport { getHTMLDate } from '../utils';\n\nexport default function Filters({ value, setFilters }) {\n  function handler({ target }) {\n    if (target.name == 'sortBySum') {\n      setFilters(filters => {\n        filters.sortBySum = +target.value;\n        filters.sortByDate = 0;\n        return filters;\n      });\n    } else if (target.name == 'sortByDate') {\n      setFilters(filters => {\n        filters.sortByDate = +target.value;\n        filters.sortBySum = 0;\n        return filters;\n      });\n    } else if (target.name == 'filterMoneyway') {\n      setFilters(filters => {\n        filters.filterMoneyway = +target.value;\n        return filters;\n      });\n    } else if (target.name == 'firstDate' || target.name == 'lastDate') {\n      setFilters(filters => {\n        filters.filterDate[target.name] = new Date(target.value).getTime();\n        return filters;\n      });\n    }\n  }\n\n  const SortBySum = ({ value }) => (\n    <div>\n      sortBySum\n      <label>\n        <input type=\"radio\" name=\"sortBySum\" value=\"0\" checked={value === 0} />\n        Off\n      </label>\n      <label>\n        <input type=\"radio\" name=\"sortBySum\" value=\"1\" checked={value === 1} />\n        Up\n      </label>\n      <label>\n        <input type=\"radio\" name=\"sortBySum\" value=\"-1\" checked={value === -1} />\n        Down\n      </label>\n    </div>\n  );\n\n  const SortByDate = ({ value }) => (\n    <div>\n      sortByDate\n      <label>\n        <input type=\"radio\" name=\"sortByDate\" value=\"0\" checked={value === 0} />\n        Off\n      </label>\n      <label>\n        <input type=\"radio\" name=\"sortByDate\" value=\"1\" checked={value === 1} />\n        Up\n      </label>\n      <label>\n        <input type=\"radio\" name=\"sortByDate\" value=\"-1\" checked={value === -1} />\n        Down\n      </label>\n    </div>\n  );\n\n  const FilterMoneyway = ({ value }) => (\n    <div>\n      filterMoneyway\n      <label>\n        <input type=\"radio\" name=\"filterMoneyway\" value=\"0\" checked={value === 0} />\n        All\n      </label>\n      <label>\n        <input type=\"radio\" name=\"filterMoneyway\" value=\"1\" checked={value === 1} />\n        Income\n      </label>\n      <label>\n        <input type=\"radio\" name=\"filterMoneyway\" value=\"-1\" checked={value === -1} />\n        Outcome\n      </label>\n    </div>\n  );\n\n  const DateFilter = ({ value }) => {\n    function DateInput({ value, name }) {\n      return (\n        <input name={name} type=\"datetime-local\" placeholder=\"date\" value={getHTMLDate(value)} />\n      );\n    }\n\n    return (\n      <div>\n        <DateInput value={value.firstDate} name=\"firstDate\" />\n        <DateInput value={value.lastDate} name=\"lastDate\" />\n      </div>\n    );\n  };\n\n  return (\n    <div onchange={handler}>\n      <SortBySum value={value.sortBySum} />\n      <br />\n      <SortByDate value={value.sortByDate} />\n      <br />\n      <FilterMoneyway value={value.filterMoneyway} />\n      <br />\n      <DateFilter value={value.filterDate} />\n    </div>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport { useEffect, useState } from '../framework/hooks';\n\nimport styles from '../style';\nimport { getDateString } from '../utils';\nimport Filters from '../components/Filters';\nimport { removeTransaction, setBalance, getUserDB } from '../data/rest';\n\nexport default function List({ setUserData, transactions, balance, categories, openForm }) {\n  //TODO: lastDate конфюзит, когда добавляется новая транзакция.\n  const [filters, setFilters] = useState({\n    filterMoneyway: 0,\n    sortBySum: 0,\n    sortByDate: 1,\n    filterDate: {\n      firstDate: 0,\n      lastDate: Date.now(),\n    },\n  });\n\n  let totalSum = 0;\n\n  function getFilteredTransactions(transactions) {\n    let filteredTransactions = Object.entries(transactions);\n\n    filteredTransactions = filteredTransactions.filter(\n      transaction =>\n        transaction[1].date >= filters.filterDate.firstDate &&\n        transaction[1].date <= filters.filterDate.lastDate,\n    );\n\n    if (filters.filterMoneyway != 0) {\n      filteredTransactions = filteredTransactions.filter(\n        transaction => filters.filterMoneyway * transaction[1].sum > 0,\n      );\n    }\n\n    if (filters.sortByDate != 0) {\n      filteredTransactions.sort((a, b) => filters.sortByDate * (b[1].date - a[1].date));\n    }\n    if (filters.sortBySum != 0) {\n      filteredTransactions.sort((a, b) => filters.sortBySum * (b[1].sum - a[1].sum));\n    }\n\n    return filteredTransactions;\n  }\n\n  const ListItems = getFilteredTransactions(transactions).map(transaction => {\n    const { date, category, comment, sum } = transaction[1];\n    const id = transaction[0];\n    const categoryGroup = sum < 0 ? 'outcome' : 'income';\n    totalSum += sum;\n    const color = { outcome: 'red', income: 'green' };\n\n    return (\n      <li id={id} class={styles['list-item']}>\n        <span style=\"width:30%\">{getDateString(date)}</span>\n        <span class={styles[color[categoryGroup]]} style=\"width:15%\">\n          {sum}\n        </span>\n        <span>{categories[categoryGroup][category]}</span>\n        <span style=\"width:25%\">{comment}</span>\n\n        <button\n          class={styles['btn-edit']}\n          onclick={e => {\n            openForm(e.target.parentElement.id);\n          }}\n        >\n          🖉\n        </button>\n\n        <button class={styles['btn-delete']} onclick={deleteTransaction}>\n          X\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div>\n      <ul class={styles.list}>\n        {ListItems}\n        <li>sum: {totalSum}</li>\n      </ul>\n\n      <Filters value={filters} setFilters={setFilters} />\n    </div>\n  );\n\n  function deleteTransaction(e) {\n    const id = e.target.parentElement.id;\n    const newBalance = balance - transactions[id].sum;\n\n    removeTransaction(id)\n      .then(() => setBalance(newBalance))\n      .then(() => getUserDB())\n      .then(data => {\n        const { balance, categories } = data;\n        const transactions = Object.entries(data.transactions).map(([key, value]) => ({\n          id: key,\n          ...value,\n        }));\n        setUserData({ balance, categories, transactions });\n      });\n  }\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\n\nexport default function Sum({ value, handler }) {\n  return (\n    <input\n      type=\"number\"\n      placeholder=\"sum\"\n      autofocus\n      name=\"sum\"\n      min=\"1\"\n      value={value === 0 ? '' : value}\n      required\n      onChange={e => {\n        handler(e.target.name, +e.target.value);\n      }}\n    />\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\n\nexport default function Category({ value, categories }) {\n  return (\n    <select name=\"category\" id=\"categories\">\n      {categories.map((category, i) =>\n        value == i ? (\n          <option selected value={i}>\n            {category}\n          </option>\n        ) : (\n          <option value={i}>{category}</option>\n        ),\n      )}\n    </select>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework/element';\nimport { getHTMLDate } from '../../utils';\n\nexport default function DateInput({ value, handler }) {\n  return (\n    <input\n      name=\"date\"\n      type=\"datetime-local\"\n      placeholder=\"date\"\n      value={getHTMLDate(value)}\n      onInput={e => {\n        handler(e.target.name, new Date(e.target.value).getTime());\n      }}\n    />\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\n\nexport default function Comment({ value, handler }) {\n  return (\n    <input\n      type=\"text\"\n      placeholder=\"comment\"\n      name=\"comment\"\n      value={value}\n      onChange={e => {\n        handler(e.target.name, e.target.value);\n      }}\n    />\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../../framework/element';\n\nexport default function ToggleMoneyWay({ value, handler }) {\n  return (\n    <div\n      onchange={({ target }) => {\n        handler(target.value === 'income' ? true : false);\n      }}\n    >\n      <label>\n        <input type=\"radio\" name=\"moneyWay\" value=\"income\" checked={value === true} />\n        income\n      </label>\n\n      <label>\n        <input type=\"radio\" name=\"moneyWay\" value=\"outcome\" checked={value === false} />\n        outcome\n      </label>\n    </div>\n  );\n}\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\n\nimport styles from '../../style';\nimport { useState } from '../../framework/hooks';\n\nimport Sum from './Sum';\nimport Category from './Category';\nimport DateInput from './DateInput';\nimport Comment from './Comment';\nimport ToogleMoneyWay from './ToggleMoneyWay';\n\nexport default function TransactionForm({ transaction, categories, returnData }) {\n  // TODO don`t show single zero in sum\n  // TODO: what about initial category?\n\n  const initialTransactionValues = {\n    comment: '',\n    category: 0,\n    sum: 0,\n    date: Date.now(),\n  };\n\n  const [data, setData] = useState(transaction || initialTransactionValues);\n  const [isIncome, setIsIncome] = useState(\n    transaction ? (transaction.sum > 0 ? true : false) : false,\n  );\n\n  const updateData = (name, value) => {\n    setData(data => {\n      if (name == 'sum') value = isIncome ? +value : -value;\n      data[name] = value;\n      return data;\n    });\n  };\n\n  return (\n    <form\n      class={styles.form}\n      onsubmit={e => {\n        e.preventDefault();\n        returnData(data);\n        // TransactionForm.hooks = [];\n      }}\n    >\n      <Sum value={Math.abs(data.sum)} handler={updateData} />\n\n      <DateInput value={data.date} handler={updateData} />\n\n      <ToogleMoneyWay\n        value={isIncome}\n        handler={value => {\n          setIsIncome(value);\n          setData(data => {\n            data.sum *= -1;\n            data.category = 0;\n            return data;\n          });\n        }}\n      />\n\n      <Category\n        value={data.category}\n        categories={isIncome ? categories.income : categories.outcome}\n        handler={updateData}\n      />\n\n      <Comment value={data.comment} handler={updateData} />\n\n      <button\n        type=\"button\"\n        class=\"cancel\"\n        onclick={() => {\n          // TransactionForm.hooks = [];\n          returnData();\n        }}\n      >\n        cancel\n      </button>\n\n      <input class=\"add\" type=\"submit\" value=\"add\" />\n    </form>\n  );\n}\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport { useEffect, useState, useRef, current } from '../framework/hooks';\nimport { connectFirebase } from '../data/rest.js';\n\nimport Main from '../components/Main';\nimport List from '../components/List';\n\nimport TransactionForm from './TransactionForm/TransactionForm';\nimport { editTransaction, setBalance, getUserDB, addNewTransaction } from '../data/rest';\nimport styles from '../style.css';\n\nexport default function App() {\n  const [userDataIsLoaded, setIsLoaded] = useState(false);\n  const [userData, setUserData] = useState({});\n  const [formIsOpen, setFormIsOpen] = useState(false);\n  const [currentTransactionID, setCurrentTransactionID] = useState(null);\n\n  // временный флаг, чтобы проще отслеживать примитив в стейте вместо userData\n  const [flag, setFlag] = useState('');\n\n  useEffect(\n    () => {\n      connectFirebase(data => {\n        setUserData(data);\n        setIsLoaded(!userDataIsLoaded);\n      });\n    },\n    [\n      /* а что если юзер выйдет? */\n    ],\n  );\n\n  function formHandler(data) {\n    setFormIsOpen(false);\n\n    if (data) {\n      const newBalance = userData.balance + data.sum;\n\n      if (currentTransactionID) {\n        editTransaction(currentTransactionID, data)\n          .then(() => setBalance(newBalance))\n          .then(() => getUserDB())\n          .then(data => {\n            setUserData(data);\n            setCurrentTransactionID(null);\n          });\n      } else {\n        setFlag('loading');\n\n        addNewTransaction(data)\n          .then(() => setBalance(newBalance))\n          .then(() => getUserDB())\n          .then(() => {\n            setFlag('ok');\n            setUserData(data);\n          });\n      }\n    }\n  }\n\n  if (!userDataIsLoaded) {\n    return <h1>Loading...</h1>;\n  } else {\n    return (\n      <div class={styles['app-container']}>\n        <p>{flag}</p>\n        <Main\n          balance={userData.balance}\n          openForm={() => {\n            setFormIsOpen(true);\n          }}\n        />\n\n        <List\n          transactions={userData.transactions}\n          categories={userData.categories}\n          openForm={id => {\n            setCurrentTransactionID(id);\n            setFormIsOpen(true);\n          }}\n          setUserData={setUserData}\n        />\n\n        {formIsOpen ? (\n          <TransactionForm\n            transaction={userData.transactions[currentTransactionID]}\n            categories={userData.categories}\n            returnData={formHandler}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nwindow.App = App;\n","import renderApp from './framework/render';\nimport App from './components/App';\n\nrenderApp(App, document.getElementById('app'));\n"]}