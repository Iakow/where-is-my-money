{"version":3,"sources":["data/dataStore.js","data/rest.js","framework/element.js","components/Main.js","utils.js","components/List.js","components/TransactionForm.js","components/App.js","framework/render.js","index.js"],"names":["dataStore","auth","TOKEN","UID","userData","categories","balance","transactions","transactionForm","isOpened","transactionId","data","connectFirebase","handleData","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","onAuthStateChanged","user","uid","getIdToken","then","token","getUserDB","catch","initializeUserDB","userDB","response","fetch","method","body","JSON","stringify","outcome","income","json","signout","signOut","signin","email","signInWithEmailAndPassword","userCredential","error","code","message","register","mail","createUserWithEmailAndPassword","getTransactions","result","addNewTransaction","transaction","setBalance","getBalance","getCategories","removeTransaction","id","editTransaction","createElement","tag","props","children","element","DocumentFragment","document","Object","entries","forEach","name","value","startsWith","toLowerCase","window","addEventListener","substr","includes","removeAttribute","setAttribute","e","console","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","Main","styles","main","openTransactionForm","sum","date","Date","now","category","comment","forms","focus","getHTMLDate","timestamp","d","DD","getDate","MM","getMonth","getFullYear","getHours","getMinutes","getDateString","List","items","categoryGroup","push","loadTransactionInForm","deleteTransaction","list","transactionID","target","parentElement","newBalance","moneyWay","TransactionForm","Math","abs","form","addTransactionInDB","cancel","Sum","Category","querySelector","innerHTML","map","i","join","DateInput","Comment","preventDefault","elements","newTransaction","getTime","initialFormSum","refreshUserData","App","params","renderApp","app"],"mappings":"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","file":"src.b47de635.js","sourceRoot":"../src","sourcesContent":["const dataStore = {\n  auth: {\n    TOKEN: null,\n    UID: null,\n  },\n  userData: {\n    categories: null,\n    balance: null,\n    transactions: null,\n  },\n  transactionForm: {\n    isOpened: false,\n    transactionId: null,\n    data: null,\n  },\n};\n\nexport default dataStore;\n","import dataStore from '../data/dataStore';\n\nexport function connectFirebase(handleData) {\n  const firebaseConfig = {\n    apiKey: 'AIzaSyBwtSg-c3xYVJkNSDA49afwTxu6rA2JBDI',\n    authDomain: 'kottans-app.firebaseapp.com',\n    databaseURL: 'https://kottans-app-default-rtdb.firebaseio.com',\n    projectId: 'kottans-app',\n    storageBucket: 'kottans-app.appspot.com',\n    messagingSenderId: '558738104058',\n    appId: '1:558738104058:web:096c34066c87562a5df343',\n    measurementId: 'G-MDSKRH794G',\n  };\n\n  firebase.initializeApp(firebaseConfig);\n\n  firebase.auth().onAuthStateChanged(user => {\n    if (user) {\n      dataStore.auth.UID = user.uid;\n\n      user\n        .getIdToken()\n        .then(token => (dataStore.auth.TOKEN = token))\n        .then(() => getUserDB())\n        .then(data => handleData(data))\n        .catch(/* error => fconsole.log(error.message) */);\n    } else {\n      //jconsole.log('need login');\n    }\n  });\n}\n\nasync function initializeUserDB(uid) {\n  let userDB = {\n    transactions: '',\n    balance: '',\n    categories: {\n      outcome: ['Одежда', 'Транспорт', 'Услуги', 'Здоровье', 'Питание', 'Гигиена', 'Другое'],\n      income: ['Зарплата', 'Фриланс', 'Подарок', 'Другое'],\n    },\n  };\n\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${uid}.json?auth=${TOKEN}`,\n    {\n      method: 'PUT',\n      body: JSON.stringify(userDB),\n    },\n  );\n\n  let result = await response.json();\n}\n\nfunction signout() {\n  firebase.auth().signOut();\n}\n\nfunction signin(email) {\n  firebase\n    .auth()\n    .signInWithEmailAndPassword(email, '135790')\n    .then(userCredential => {\n      var user = userCredential.user;\n    })\n    .catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n}\n\nexport function register(mail) {\n  firebase\n    .auth()\n    .createUserWithEmailAndPassword(mail, '135790')\n    .then(userCredential => {\n      var user = userCredential.user;\n      dataStore.auth.UID = user.uid;\n\n      return user;\n    })\n    .then(user => {\n      return user.getIdToken();\n    })\n    .then(token => {\n      dataStore.auth.TOKEN = token;\n    })\n    .then(() => {\n      initializeUserDB(dataStore.auth.UID);\n    })\n    .catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n}\n\n/* не нужна, т.к. нужен и баланс же */\nexport async function getTransactions() {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/transactions.json?auth=${dataStore.auth.TOKEN}`,\n  );\n\n  let result = await response.json();\n  dataStore.userData.transactions = result;\n}\n\nexport async function addNewTransaction(transaction) {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/transactions.json?auth=${dataStore.auth.TOKEN}`,\n    {\n      method: 'POST',\n      body: JSON.stringify(transaction),\n    },\n  );\n\n  let result = await response.json();\n\n  getTransactions();\n}\n\nexport async function setBalance(balance) {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/balance.json?auth=${dataStore.auth.TOKEN}`,\n    {\n      method: 'PUT',\n      body: JSON.stringify(balance),\n    },\n  );\n\n  let result = await response.json();\n}\n\nexport async function getBalance() {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/balance.json?auth=${dataStore.auth.TOKEN}`,\n  );\n\n  let result = await response.json();\n\n  dataStore.userData.balance = result;\n}\n\nexport async function getCategories() {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/categories.json?auth=${dataStore.auth.TOKEN}`,\n  );\n\n  let result = await response.json();\n\n  dataStore.userData.categories = result;\n}\n\nexport async function getUserDB() {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}.json?auth=${dataStore.auth.TOKEN}`,\n  );\n\n  let result = await response.json();\n\n  return result;\n}\n\nexport async function removeTransaction(id) {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/transactions/${id}.json?auth=${dataStore.auth.TOKEN}`,\n    {\n      method: 'DELETE',\n    },\n  );\n\n  let result = await response.json();\n}\n\n// надо бы PATH\nexport async function editTransaction(id, data) {\n  let response = await fetch(\n    `https://kottans-app-default-rtdb.firebaseio.com/users/${dataStore.auth.UID}/transactions/${id}.json?auth=${dataStore.auth.TOKEN}`,\n    {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    },\n  );\n\n  let result = await response.json();\n}\n","/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nexport const createElement = (tag, props, ...children) => {\n  if (typeof tag === 'function') {\n    /*\n      Passing children as the 2nd argument is required as jsx transformer puts component functions\n      and regular tags in wrapper functions that expect children as the 2nd param\n     */\n    return tag({ ...props, children }, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else {\n            element.setAttribute(name, value);\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\n\nimport styles from '../style';\nimport renderApp from '../framework/render';\nimport dataStore from '../data/dataStore';\n\nexport default function Main(props) {\n  return (\n    <>\n      <div class={styles.main}>\n        <span>BALANCE: {props.balance}</span>\n\n        <button class={styles['btn-add']} onClick={openTransactionForm}>\n          +\n        </button>\n      </div>\n    </>\n  );\n}\n\nfunction openTransactionForm() {\n  dataStore.transactionForm.data = {\n    sum: '',\n    date: Date.now(),\n    category: 1,\n    comment: '',\n  };\n  dataStore.transactionForm.isOpened = true;\n\n  renderApp();\n  document.forms[0].sum.focus();\n}\n","export function getHTMLDate(timestamp) {\n  const d = new Date(timestamp);\n\n  const DD = d.getDate() > 9 ? d.getDate() : `0${d.getDate()}`;\n  const MM = d.getMonth() + 1 > 9 ? d.getMonth() + 1 : `0${d.getMonth() + 1}`;\n  const YYYY = d.getFullYear();\n\n  const HH = d.getHours() > 9 ? d.getHours() : `0${d.getHours()}`;\n  const MI = d.getMinutes() > 9 ? d.getMinutes() : `0${d.getMinutes()}`;\n\n  return `${YYYY}-${MM}-${DD}T${HH}:${MI}`;\n}\n\nexport function getDateString(timestamp) {\n  const d = new Date(timestamp);\n\n  const DD = d.getDate() > 9 ? d.getDate() : `0${d.getDate()}`;\n  const MM = d.getMonth() + 1 > 9 ? d.getMonth() + 1 : `0${d.getMonth() + 1}`;\n  const YYYY = d.getFullYear();\n\n  const HH = d.getHours() > 9 ? d.getHours() : `0${d.getHours()}`;\n  const MI = d.getMinutes() > 9 ? d.getMinutes() : `0${d.getMinutes()}`;\n\n  return `${DD}.${MM}.${YYYY} - ${HH}:${MI}`;\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\n\nimport styles from '../style';\nimport renderApp from '../framework/render';\nimport { getDateString } from '../utils';\nimport { removeTransaction, setBalance, getUserDB } from '../data/rest';\nimport dataStore from '../data/dataStore';\n\nexport default function List({ transactions }) {\n  let items = [];\n\n  for (let id in transactions) {\n    const { sum, date, category, comment } = transactions[id];\n    const categoryGroup = sum < 0 ? 'outcome' : 'income';\n\n    items.push(\n      <li id={id} class={styles['list-item']}>\n        <span style=\"width:30%\">{getDateString(date)}</span>\n        <span style=\"width:15%\">{sum}</span>\n        <span>{dataStore.userData.categories[categoryGroup][category]}</span>\n        <span style=\"width:25%\">{comment}</span>\n\n        <button class={styles['btn-edit']} onclick={loadTransactionInForm}>\n          🖉\n        </button>\n\n        <button class={styles['btn-delete']} onclick={deleteTransaction}>\n          X\n        </button>\n      </li>,\n    );\n  }\n\n  return (\n    <>\n      <ul class={styles.list}>{items}</ul>\n    </>\n  );\n}\n\nfunction loadTransactionInForm(e) {\n  const transactionID = e.target.parentElement.id;\n  dataStore.transactionForm.transactionId = transactionID;\n\n  dataStore.transactionForm.data = { ...dataStore.userData.transactions[transactionID] };\n\n  dataStore.transactionForm.isOpened = true;\n  renderApp();\n  document.forms[0].sum.focus();\n}\n\nfunction deleteTransaction(e) {\n  const id = e.target.parentElement.id;\n  const newBalance = dataStore.userData.balance - dataStore.userData.transactions[id].sum;\n\n  removeTransaction(id)\n    .then(() => setBalance(newBalance))\n    .then(() => getUserDB())\n    .then(data => {\n      dataStore.userData.balance = data.balance;\n      dataStore.userData.transactions = data.transactions;\n      dataStore.userData.categories = data.categories;\n\n      renderApp();\n    });\n}\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\n\nimport styles from '../style';\nimport renderApp from '../framework/render';\nimport { editTransaction, setBalance, getUserDB, addNewTransaction } from '../data/rest';\nimport { getHTMLDate } from '../utils';\nimport dataStore from '../data/dataStore';\n\nlet moneyWay;\n\nexport default function TransactionForm({ transaction }) {\n  moneyWay = +transaction.sum > 0 ? 'income' : 'outcome';\n  const { comment, category } = transaction;\n  const sum = transaction.sum ? Math.abs(transaction.sum) : '';\n  const date = getHTMLDate(transaction.date);\n\n  return (\n    <form class={styles.form} onsubmit={addTransactionInDB}>\n      <Sum value={sum} />\n      <DateInput value={date} />\n      <Category value={category} />\n      <Comment value={comment} />\n\n      <button type=\"button\" class=\"cancel\" onclick={cancel}>\n        cancel\n      </button>\n      <input class=\"add\" type=\"submit\" value=\"add\" />\n    </form>\n  );\n}\n\nfunction Sum({ value }) {\n  return <input type=\"number\" placeholder=\"sum\" name=\"sum\" min=\"1\" value={value} required />;\n}\n\nfunction Category({ value }) {\n  const handler = e => {\n    document.querySelector('#categories').innerHTML = dataStore.userData.categories[e.target.value]\n      .map((category, i) => `<option value=${i}>${category}</option>`)\n      .join('');\n  };\n\n  return (\n    <>\n      <div onchange={handler}>\n        <label>\n          <input type=\"radio\" name=\"moneyWay\" value=\"income\" checked={moneyWay == 'income'} />\n          income\n        </label>\n\n        <label>\n          <input type=\"radio\" name=\"moneyWay\" value=\"outcome\" checked={moneyWay == 'outcome'} />\n          outcome\n        </label>\n      </div>\n\n      <br />\n\n      <select name=\"category\" id=\"categories\">\n        {dataStore.userData.categories[moneyWay].map((category, i) => (\n          <option selected={value == i} value={i}>\n            {category}\n          </option>\n        ))}\n      </select>\n    </>\n  );\n}\n\nfunction DateInput({ value }) {\n  return <input name=\"date\" type=\"datetime-local\" placeholder=\"date\" value={value} />;\n}\n\nfunction Comment({ value }) {\n  return <input type=\"text\" placeholder=\"comment\" name=\"comment\" value={value} />;\n}\n\nfunction addTransactionInDB(e) {\n  e.preventDefault();\n\n  const { sum, date, category, comment, moneyWay } = e.target.elements;\n\n  const newTransaction = {\n    sum: moneyWay.value == 'income' ? +sum.value : -sum.value,\n    date: new Date(date.value).getTime(),\n    category: +category.value,\n    comment: comment.value,\n  };\n\n  const initialFormSum = +dataStore.transactionForm.data.sum;\n  const newBalance = dataStore.userData.balance + newTransaction.sum - initialFormSum;\n\n  // вот здесь чет не очт\n  if (dataStore.transactionForm.transactionId) {\n    editTransaction(dataStore.transactionForm.transactionId, newTransaction)\n      .then(() => {\n        dataStore.transactionForm.isOpened = false;\n        renderApp();\n      })\n      .then(() => setBalance(newBalance))\n      .then(() => getUserDB())\n      .then(data => refreshUserData(data));\n  } else {\n    addNewTransaction(newTransaction)\n      .then(() => {\n        dataStore.transactionForm.isOpened = false;\n        renderApp();\n      })\n      .then(() => setBalance(newBalance))\n      .then(() => getUserDB())\n      .then(data => refreshUserData(data));\n  }\n}\n\nfunction cancel(e) {\n  e.preventDefault();\n  dataStore.transactionForm.isOpened = false;\n  renderApp();\n}\n\nfunction refreshUserData(data) {\n  dataStore.userData.balance = data.balance;\n  dataStore.userData.transactions = data.transactions;\n  dataStore.userData.categories = data.categories;\n  renderApp();\n}\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\n\nimport styles from '../style.css';\nimport Main from '../components/Main';\nimport List from '../components/List';\nimport TransactionForm from '../components/TransactionForm';\nimport dataStore from '../data/dataStore';\n\n/* у меня весь UI строится на основе данных и ререндерится все глобально\n   может стоить данные загружать в Арр?\n   данные с севера - это ясно.\n   плюс транзакция, кот. открывается в форме\n   короче все, что нужно именно для компонентов.\n\n   Стоит ли отделять как-то стейт формы? А какой стейт, она же стейтлесс?\n*/\n\nexport default function App(params) {\n  const { balance, transactions } = dataStore.userData;\n  const transaction = dataStore.transactionForm.data;\n\n  return (\n    <div class={styles['app-container']}>\n      <Main balance={balance} />\n      <List transactions={transactions} />\n      {dataStore.transactionForm.isOpened ? <TransactionForm transaction={transaction} /> : null}\n    </div>\n  );\n}\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\nimport { createElement, createFragment } from './element';\nimport App from '../components/App';\n\nexport default function renderApp() {\n  const app = document.querySelector('#app');\n  app.innerHTML = '';\n  app.appendChild(<App />);\n}\n","import { connectFirebase } from './data/rest.js';\nimport renderApp from './framework/render';\nimport dataStore from './data/dataStore';\n\ndocument.querySelector('#app').innerHTML = `Loading...`;\nconnectFirebase(refreshUserData);\n\nfunction refreshUserData(data) {\n  dataStore.userData.balance = data.balance;\n  dataStore.userData.transactions = data.transactions;\n  dataStore.userData.categories = data.categories;\n  renderApp();\n}\n"]}